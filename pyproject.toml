[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "omnimind"
version = "1.0.0"
description = "OSA - The Ultimate Autonomous AI System with Human-like Thinking"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "OSA Development Team"},
]
keywords = ["ai", "autonomous-agents", "thinking-engine", "continuous-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "anthropic>=0.18.0",
    "openai>=1.10.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "websockets>=12.0",
    "chromadb>=0.4.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "asyncio-mqtt>=0.16.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "coverage>=7.4.0",
    
    # Code quality
    "black>=24.1.1",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "pylint>=3.0.3",
    "mypy>=1.8.0",
    "bandit>=1.7.6",
    "safety>=3.0.0",
    "pydocstyle>=6.3.0",
    
    # Pre-commit
    "pre-commit>=3.6.0",
    
    # Documentation
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
    
    # Performance monitoring
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
    "py-spy>=0.3.14",
    
    # Development utilities
    "ipython>=8.18.0",
    "jupyter>=1.0.0",
    "rich>=13.7.0",
]

[project.urls]
Homepage = "https://github.com/prakashgbid/omnimind"
Documentation = "https://prakashgbid.github.io/omnimind/"
Repository = "https://github.com/prakashgbid/omnimind.git"
Issues = "https://github.com/prakashgbid/omnimind/issues"

[project.scripts]
osa = "omnimind_cli:main"

# Black configuration
[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0111", # missing-docstring
    "R0903", # too-few-public-methods
    "R0913", # too-many-arguments
    "R0914", # too-many-locals
    "W0613", # unused-argument
    "C0103", # invalid-name
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 6
max-branches = 15
max-statements = 60
max-parents = 7
max-attributes = 10
min-public-methods = 1
max-public-methods = 25
max-bool-expr = 5

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection in tests

# pydocstyle configuration
[tool.pydocstyle]
convention = "google"
add-ignore = "D100,D104,D213,D203"

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml)